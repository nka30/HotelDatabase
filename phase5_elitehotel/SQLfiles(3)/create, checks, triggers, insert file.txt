--everything

CREATE TABLE Customer (
    Customer_ID INTEGER PRIMARY KEY,
    Birth_date DATE,
    Address VARCHAR(255),
    Email VARCHAR(255),
    Gender VARCHAR(7) NOT NULL,
    Phone_number INT,
    IDdocument VARCHAR(255) NOT NULL,
    First VARCHAR(255) NOT NULL,
    last VARCHAR(255) Not NULL,
	UNIQUE(IDdocument)
);


CREATE TABLE Room (
    Room_Number INTEGER PRIMARY KEY,
    Room_type VARCHAR(255),
    Price NUMERIC
    
);
--after normalization: create tables Bill and Pays
CREATE TABLE Bill (
  Bill_ID INTEGER PRIMARY KEY,
  Date_created timestamp NOT NULL,
  Grand_total NUMERIC,
  Customer_ID_fk INTEGER,
  FOREIGN KEY (Customer_ID_fk) REFERENCES Customer(Customer_ID)
);

CREATE TABLE Pays (
  Bill_ID_fk INTEGER,
  Payment_date timestamp,
  Amount_paid NUMERIC,
  Payment_method VARCHAR(255),
  PRIMARY KEY (Bill_ID_fk, Payment_date),
  FOREIGN KEY (Bill_ID_fk) REFERENCES Bill(Bill_ID)
);

CREATE TABLE Visitor (
  First_name VARCHAR(255) NOT NULL,
  Last_name VARCHAR(255) NOT NULL,
  Customer_ID_fk INTEGER,
  Date_of_visit timestamp ,
  Gender VARCHAR(7)NOT NULL,
  Phone_number INTEGER,
  PRIMARY KEY (First_name, Last_name, Customer_ID_fk, Date_of_visit),
  FOREIGN KEY (Customer_ID_fk) REFERENCES Customer(Customer_ID)
);

CREATE TABLE Books (
  Start_timestamp TIMESTAMP ,
  End_timestamp TIMESTAMP,
  RoomNumber_fk INTEGER ,
  CustomerID_fk INTEGER,
  Date_booked DATE NOT NULL,
  PRIMARY KEY (Start_timestamp, End_timestamp, RoomNumber_fk, CustomerID_fk),
  FOREIGN KEY (RoomNumber_fk) REFERENCES Room(Room_Number),
  FOREIGN KEY (CustomerID_fk) REFERENCES Customer(Customer_ID)
);

CREATE TABLE Checks_in (
  RoomNumber_fk INTEGER,
  CustomerID_fk INTEGER,
  Date timestamp ,
  PRIMARY KEY (RoomNumber_fk, CustomerID_fk, Date),
  FOREIGN KEY (RoomNumber_fk) REFERENCES Room(Room_Number),
  FOREIGN KEY (CustomerID_fk) REFERENCES Customer(Customer_ID)
);
CREATE TABLE Checks_out (
    RoomNumber_fk INT,
    CustomerID_fk INT,
    Date TIMESTAMP,
    FOREIGN KEY (RoomNumber_fk) REFERENCES Room(Room_Number),
    FOREIGN KEY (CustomerID_fk) REFERENCES Customer(Customer_ID),
	PRIMARY KEY(RoomNumber_fk, CustomerID_fk, Date)
);

CREATE TABLE Service (
    ID INT PRIMARY KEY,
    Price NUMERIC,
    Type VARCHAR(255)NOT NULL,
    Location VARCHAR(255),
    Start_timestamp TIME NOT NULL ,
    End_timestamp TIME NOT NULL
    
);
CREATE TABLE Uses(
	Date TIMESTAMP,
	CustomerID_fk INT,
	ServiceID_fk INT,
	PRIMARY KEY(Date,CustomerID_fk,ServiceID_fk),
	FOREIGN KEY (CustomerID_fk) REFERENCES Customer(Customer_ID),
    FOREIGN KEY (ServiceID_fk) REFERENCES Service(ID)
);

CREATE TABLE Department(
	Name VARCHAR(255) PRIMARY KEY,
	Phone_Number INT NOT NULL,
	Location VARCHAR(255) NOT NULL
);

CREATE TABLE Staff(
	StaffID INT PRIMARY KEY,
	Salary NUMERIC,
	Gender VARCHAR(7) NOT NULL,
	Fname VARCHAR(255) NOT NULL,
	Lname VARCHAR(255)NOT NULL,
	Birth_date DATE NOT NULL,
	Address VARCHAR(255) NOT NULL,
	IDdocument NUMERIC NOT NULL,
	Department_fk VARCHAR(255),
	FOREIGN KEY (Department_fk) REFERENCES Department(Name)
);
CREATE TABLE Dependent(
	First_name VARCHAR(255),
	Last_name VARCHAR(255),
	StaffID_fk INT,
	Relationship VARCHAR(255) NOT NULL,
	Birth_date DATE NOT NULL,
	Phone_number INT,
	Gender VARCHAR(7) NOT NULL,
	PRIMARY KEY(First_name,Last_name,StaffID_fk),
	FOREIGN KEY (StaffID_fk) REFERENCES Staff(StaffID)
	);


CREATE TABLE Award(
	BadgeID INT PRIMARY KEY,
	Validity_period INT,
	Bonus NUMERIC,
	Category VARCHAR(255) ,
	Description VARCHAR(255) NOT NULL

);

CREATE TABLE Shift(
	Shift_ID INT PRIMARY KEY,
	Start_time TIME NOT NULL,
	End_time TIME NOT NULL,
	Day VARCHAR(255) NOT NULL

);
CREATE TABLE Receives(
	StaffID_fk INT,
	BadgeID_fk INT,
	Date DATE,
	PRIMARY KEY(StaffID_fk,BadgeID_fk, Date),
	FOREIGN KEY (StaffID_fk) REFERENCES Staff(StaffID),
	FOREIGN KEY (BadgeID_fk) REFERENCES Award(BadgeID)
	
);

CREATE TABLE Provides(
	StaffID_fk  INT,
	ServiceID_fk  INT,
	Shift_ID_fk  INT,
	PRIMARY KEY(StaffID_fk,ServiceID_fk,Shift_ID_fk),
	FOREIGN KEY (StaffID_fk) REFERENCES Staff(StaffID),
	FOREIGN KEY (ServiceID_fk) REFERENCES Service(ID),
	FOREIGN KEY (Shift_ID_fk) REFERENCES Shift(Shift_ID)
	
);
CREATE TABLE Event (
	EventID INT PRIMARY KEY,
	Name VARCHAR(255)NOT NULL,
	Type VARCHAR(255)NOT NULL,
	Description VARCHAR(255)NOT NULL,
	Location VARCHAR(255),
	Capacity INT
	
);

CREATE TABLE Holds(
	ServiceID_fk INT,
	EventID_fk  INT,
	Date DATE,
	Start_time TIME NOT NULL,
	End_time TIME NOT NULL,
	PRIMARY KEY(ServiceID_fk,EventID_fk, Date),
	FOREIGN KEY (ServiceID_fk) REFERENCES Service(ID),
	FOREIGN KEY (EventID_fk) REFERENCES Event(EventID)
);
CREATE TABLE Contractor(
	Name VARCHAR(255) ,
	Start_date DATE,
	End_date DATE,
	Type VARCHAR(255) NOT NULL,
	Phone_number INT,
	Location VARCHAR(255),
	ServiceID_fk INT,
	Amount NUMERIC NOT NULL,
	Supervisor VARCHAR(255),
	Description VARCHAR(255),
	PRIMARY KEY (Name, Start_date,End_date),
	FOREIGN KEY (ServiceID_fk) REFERENCES Service(ID)	
);



CREATE TABLE Supplier (
  Name VARCHAR(255),
  Phone_number VARCHAR(255),
  Location VARCHAR(255),
  Type VARCHAR(255) NOT NULL,
  Email VARCHAR(255),
  PRIMARY KEY (Name)
);

CREATE TABLE Inventory (
  Inventory_ID INTEGER PRIMARY KEY,
  Dep_Name_fk VARCHAR(255) NOT NULL,
  Type VARCHAR(255) NOT NULL,
  Name VARCHAR(255),
  Price NUmeric  NOT NULL,
  Amount INTEGER NOT NULL,
  FOREIGN KEY (Dep_Name_fk) REFERENCES Department(Name)
);

CREATE TABLE Supplies(
	Date_supplied DATE,
	InventoryID_fk INT,
	SupplierName_fk VARCHAR(255),
	Amount NUMERIC NOT NULL,
	PRIMARY KEY(Date_supplied,InventoryID_fk,SupplierName_fk),
	FOREIGN KEY (InventoryID_fk) REFERENCES Inventory(Inventory_ID),
	FOREIGN KEY (SupplierName_fk) REFERENCES Supplier(Name)
	
);
CREATE TABLE Location(
	Location VARCHAR(255),
	InventoryID_fk INT,
	PRIMARY KEY (Location,InventoryID_fk),
	FOREIGN KEY (InventoryID_fk) REFERENCES Inventory(Inventory_ID)
);
---triggers
CREATE OR REPLACE FUNCTION check_shifts()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (
        SELECT 1
        FROM Provides
        WHERE staffid_fk = NEW.staffid_fk
        AND shift_id_fk = NEW.shift_id_fk
    ) THEN
        RAISE EXCEPTION 'A staff cannot work in different services at the same time!';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER before_providing_insert
BEFORE INSERT ON Provides
FOR EACH ROW
EXECUTE FUNCTION check_shifts();

CREATE OR REPLACE FUNCTION check_validity()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (
        SELECT 1
        FROM Receives r
        WHERE r.date > NEW.date - (SELECT validity_period FROM Award WHERE badgeid=r.badgeid_fk)
			AND r.staffid_fk= NEW.staffid_fk AND r.badgeid_fk=NEW.badgeid_fk
        
    ) THEN
        RAISE EXCEPTION 'You can not receive the same award before the end of the valididty period of your first';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER before_receives_insert
BEFORE INSERT ON Receives
FOR EACH ROW
EXECUTE FUNCTION check_validity();

-- after normalizing bill
CREATE OR REPLACE FUNCTION gen_bill()
RETURNS TRIGGER AS $$
DECLARE billprice NUMERIC;
BEGIN
    SELECT price INTO billprice
    FROM service
    WHERE id = NEW.serviceid_fk AND price > 0;

    IF FOUND THEN
        INSERT INTO bill (bill_id, date_created, grand_total, customer_id_fk)
        VALUES ((SELECT COALESCE(MAX(bill_id), 0) + 1 FROM bill), NEW.date, billprice, NEW.customerid_fk);
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER service_bill
AFTER INSERT ON Uses
FOR EACH ROW
EXECUTE FUNCTION gen_bill();

CREATE OR REPLACE FUNCTION check_room_availability()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (
        SELECT 1
        FROM Books
        WHERE RoomNumber_fk = NEW.RoomNumber_fk
        AND start_timestamp < NEW.end_timestamp
        AND end_timestamp > NEW.start_timestamp
    ) THEN
        RAISE EXCEPTION 'Room is not available for booking due to overlapping booking';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER before_booking_insert
BEFORE INSERT ON Books
FOR EACH ROW
EXECUTE FUNCTION check_room_availability();

-- after normalizing bill
CREATE OR REPLACE FUNCTION create_bill_books()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO public.bill(
        bill_id, date_created, grand_total, customer_id_fk)
    VALUES (
        (SELECT COALESCE(MAX(bill_id), 0) + 1 FROM bill),
        CURRENT_DATE,
        (SELECT price FROM room WHERE room_number = NEW.roomnumber_fk),
        NEW.customerid_fk
    );
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER after_booking_bill
AFTER INSERT ON books
FOR EACH ROW
EXECUTE FUNCTION create_bill_books();

--checks

ALTER TABLE Books
ADD CHECK (End_timestamp > Start_timestamp);

ALTER TABLE Shift
ADD CHECK (End_time >Start_time);

ALTER TABLE Holds
ADD CHECK (End_time > Start_time);

ALTER TABLE Contractor
ADD CHECK (End_date > Start_date);

ALTER TABLE Room
ADD CHECK (Price > 50);

ALTER TABLE Staff
ADD CHECK (Salary > 400);

ALTER TABLE Service
ADD CHECK (Price >= 0);

ALTER TABLE Service
ADD CHECK (Start_timestamp < End_timestamp);


-- Insert data into the Customer table
INSERT INTO Customer (Customer_ID, First, Last, Email, Birth_date, Address, IDdocument, Gender, Phone_number)
VALUES
  (1, 'Nancy', 'Abdallah', 'Nka3@gmail.com', '2002-10-11', 'Aley', '234554', 'Female', '81234876'),
  (2, 'Sarah', 'Roupheal', 'Skr4@gmail.com', '2002-11-25', 'Awkar', '890088', 'Female', '70761234'),
  (3, 'Thuraya', 'Oweini', 'Tdo2@gmail.com', '2002-10-24', 'Beirut', '556777', 'Female', '76705568'),
  (4, 'Ihab', 'Tabbara', 'Ikt6@gmail.com', '2002-06-23', 'Beirut', '667890', 'Male', '03456712'),
  (5, 'Mira', 'Kanaan', 'Mmk1@gmail.com', '2002-10-12', 'Jounieh', '567778', 'Female', '03451276'),
  (6, 'Reem', 'Zaherdine', 'Rwz7@gmail.com', '2002-08-21', 'Aley', '666778', 'Female', '81236708'),
  (7, 'Mahdi', 'Harb', 'Mzh5@gmail.com', '2002-09-03', 'Jnah', '456677', 'Male', '03214567'),
  (8, 'Ahmad', 'Naamani', 'Asn2@gmail.com', '2002-07-16', 'Beirut', '678899', 'Male', '81814122'),
  (9, 'Nicolas', 'Razzouk', 'Nrs5@gmail.com', '2002-12-06', 'Beirut', '567899', 'Male', '78091234'),
  (10, 'Maya', 'Chami', 'Mhc7@gmail.com', '2002-02-08', 'Jnah', '234568', 'Female', '76731252'),
  (11, 'Oprah', 'Winfrey', 'opw@gmail.com','1954-01-29', 'Mississippi', '03678293' , 'Female', '76731252');


-- Insert data into the Bill table with random times
-- after normalization : tables Bill and Pays inserts
INSERT INTO Bill (Bill_ID, Grand_total, Date_created, Customer_ID_fk)
VALUES
    (1, '10', '2022-10-10 08:00:00', 2),
    (2, '50', '2022-10-10 09:30:00', 2),
    (3, '50', '2023-10-11 11:50:00', 4),
    (4, '30', '2023-10-11 11:50:00', 3),
    (5, '400', '2023-10-17 08:00:00', 7),
    (6, '250', '2023-10-18 09:30:00', 1),
    (7, '450', '2023-10-20 22:00:00', 2),
    (8, '200', '2023-10-13 10:00:00', 8),
    (9, '300', '2023-10-13 22:00:00', 8),
    (10, '1000', '2023-10-14 21:00:10', 8);

INSERT INTO Pays (Bill_ID_fk, Payment_date, Amount_paid, Payment_method)
VALUES
    (1, '2023-10-10 12:34:56', '5', 'Cash'),
    (2, '2023-10-10 14:22:18', '50', 'Cash'),
    (3, '2023-10-11 10:15:22', '30', 'Cash'),
    (4, '2023-10-11 13:40:15', '30', 'Visa Card'),
    (5, '2023-10-18 08:30:45', '100', 'Cash'),
    (6, '2023-10-19 09:45:20', '20', 'Visa Card'),
    (7, '2023-10-20 22:15:30', '450', 'Visa Card'),
    (8, '2023-10-13 10:30:45', '200', 'Cash'),
    (9, '2023-10-14 21:45:30', '300', 'Cash'),
    (10, '2023-10-14 21:00:10', '1000', 'Visa Card');



-- Insert data into the Visitor table
INSERT INTO Visitor (First_name, Last_name, Customer_ID_fk, Date_of_visit, Gender, Phone_number)
VALUES
  ('Lama', 'Khoury', 1, '2023-10-02 08:30:00', 'Female', '81123996'),
  ('Salim', 'Hayek', 1, '2023-10-02 10:45:00', 'Male', '03567543'),
  ('Jouli', 'Makram', 2, '2023-10-04 09:15:00', 'Female', '03452187'),
  ('Georges', 'Masaad', 3, '2023-10-04 11:30:00', 'Male', '03488994'),
  ('Hassan', 'Salman', 4, '2023-10-05 14:00:00', 'Male', '71890876'),
  ('Sandra', 'Rached', 5, '2023-10-05 15:45:00', 'Female', '76567564'),
  ('Salwa', 'Saad', 6, '2023-10-05 18:20:00', 'Female', '71345623'),
  ('Millie', 'Hawks', 1, '2023-10-20 08:00:00', 'Female', '81674555'),
  ('Li', 'Chen', 2, '2023-10-20 10:30:00', 'Male', '71456781'),
  ('Chong', 'Pam', 2, '2023-10-21 09:45:00', 'Female', '71893672');

-- Insert data into the Room table without Availability column
INSERT INTO Room (Room_Number, Room_type, Price)
VALUES
  (1, 'Single', 200),
  (2, 'Double', 400),
  (3, 'Triple', 500),
  (4, 'Suite', 900),
  (5, 'Single with view', 250),
  (6, 'Double with view', 450),
  (7, 'Triple with view', 550),
  (8, 'Suite with view', 1000),
  (9, 'Single', 200),
  (10, 'Suite', 900);

-- Insert data into the Books table
INSERT INTO Books (Start_timestamp, End_timestamp, RoomNumber_fk, CustomerID_fk, Date_booked)
VALUES
  ('2023-10-01 08:00:00', '2023-10-03 18:00:00', 1, 1, '2023-09-30'),
  ('2023-10-04 09:00:00', '2023-10-10 19:30:00', 2, 2, '2023-10-01'),
  ('2023-10-12 15:00:00', '2023-10-15 18:00:00', 7, 7, '2023-10-01'),
  ('2023-10-04 09:00:00', '2023-10-10 19:30:00', 3, 3, '2023-10-01'),
  ('2023-10-05 15:00:00', '2023-10-12 16:30:00', 4, 4, '2023-10-02'),
  ('2023-10-05 08:00:00', '2023-10-12 12:30:00', 5, 5, '2023-10-02'),
  ('2023-10-05 16:00:00', '2023-10-12 17:30:00', 6, 6, '2023-10-03'),
  ('2018-09-08 11:00:00', '2018-10-08 11:00:00', 5, 11, '1999-01-03'),
  ('2023-10-13 16:00:00', '2023-10-14 16:00:00', 8, 8, '2023-10-05'),
  ('2023-10-15 16:00:00', '2023-10-19 16:00:00', 1, 9, '2023-10-06'),
  ('2023-10-16 16:00:00', '2023-10-18 16:00:00', 3, 10, '2023-10-11'),
  ('2023-10-18 16:00:00', '2023-10-20 16:00:00', 2, 7, '2023-10-11'),
  ('2023-10-19 16:00:00', '2023-10-22 16:00:00', 5, 1, '2023-10-13'),
  ('2023-10-20 17:30:00', '2023-10-22 17:00:00', 6, 2, '2023-10-13');
-- Insert data into the Checks_in table
-- Insert data into the Checks_in table
INSERT INTO Checks_in (RoomNumber_fk, CustomerID_fk, Date)
VALUES
  (1, 1, '2023-10-02 08:30:00'),
  (2, 2, '2023-10-04 10:45:00'),
  (3, 3, '2023-10-04 09:15:00'),
  (4, 4, '2023-10-05 11:30:00'),
  (5, 5, '2023-10-05 14:00:00'),
  (6, 6, '2023-10-05 15:45:00'),
  (7, 7, '2023-10-12 18:20:00'),
  (8, 8, '2023-10-13 08:00:00'),
  (1, 9, '2023-10-15 10:30:00'),
  (3, 10, '2023-10-16 09:45:00'),
  (2, 7, '2023-10-18 12:15:00'),
  (5, 1, '2023-10-19 16:30:00'),
  (6, 2, '2023-10-20 14:45:00'),
  (5, 11, '2018-09-08 11:30:00');

-- Insert data into the Checks_out table
INSERT INTO Checks_out (RoomNumber_fk, CustomerID_fk, Date)
VALUES
  (1, 1, '2023-10-03 08:30:00'),
  (2, 2, '2023-10-10 10:45:00'),
  (3, 3, '2023-10-10 09:15:00'),
  (4, 4, '2023-10-12 11:30:00'),
  (5, 5, '2023-10-12 14:00:00'),
  (6, 6, '2023-10-12 15:45:00'),
  (7, 7, '2023-10-15 18:20:00'),
  (3, 10, '2023-10-18 09:45:00'),
  (1, 9, '2023-10-19 08:00:00'),
  (8, 8, '2023-10-20 10:30:00'),
  (5, 11, '2018-09-10 11:30:00');


-- Insert data into the Service table
INSERT INTO Service (ID, Price, Type, Location, Start_timestamp, End_timestamp)
VALUES
  (1, 0, 'Restaurant', '1st floor', '00:00:00', '23:59:59'),
  (2, 50, 'Pool/day', 'Garden', '07:00:00', '19:00:00'),
  (3, 50, 'Spa/2hrs', '-1 floor', '07:00:00', '22:00:00'),
  (4, 7, 'Gym/day', '-1 floor', '07:00:00', '22:00:00'),
  (5, 10, 'Cleaning', '-2 floor', '00:00:00', '23:59:59'),
  (6, 30, 'Guide/day', '-2 floor', '07:00:00', '19:00:00'),
  (7, 25, 'Rent a friend/hour', '-2 floor', '00:00:00', '23:59:59'),
  (8, 5, 'Food delivery help', '-2 floor', '00:00:00', '23:59:59'),
  (9, 5, 'Taxi help', '-2 floor', '00:00:00', '23:59:59'),
  (10, 5, 'Cinema', 'Garden', '07:00:00', '22:00:00'),
  (11, 0, 'Maintenance', '-2 floor', '07:00:00', '19:00:00');
-- Insert data into the Uses table
INSERT INTO Uses (Date, CustomerID_fk, ServiceID_fk)
VALUES
  ('2023-10-10 08:00:00', 2, 4),
  ('2023-10-10 09:30:00', 2, 1),
  ('2023-10-10 13:00:00', 4, 3),
  ('2023-10-10 15:45:00', 4, 1),
  ('2023-10-11 10:30:00', 4, 10),
  ('2023-10-11 11:50:00', 6, 1),
  ('2023-10-11 11:50:00', 6, 3),
  ('2023-10-12 11:00:00', 4, 4),
  ('2023-10-13 13:30:00', 7, 5),
  ('2023-10-13 13:35:00', 7, 1),
  ('2023-11-10 13:35:00', 4, 2),
  ('2023-11-10 13:36:00', 1, 2),
  ('2023-11-10 13:34:00', 8, 2),
  ('2018-09-09 11:00:00', 11, 1);
-- Insert data into the Department table
INSERT INTO Department (Name, Phone_Number, Location)
VALUES
  ('Management', '07743454', '8th floor'),
  ('Human Resources', '05238234', '8th floor'),
  ('Marketing', '05438544', '10th floor'),
  ('Finance', '07342323', '10th floor'),
  ('Information Technology', '05732834', '9th floor'),
  ('Food and Beverage Management', '07882372', '11th floor'),
  ('Security and Safety', '01463663', '12th floor'),
  ('Event Management', '03342344', '11th floor'),
  ('Customer Relations', '05345677', '12th floor'),
  ('Housekeeping', '01323353', '13th floor');
-- Insert data into the Staff table
INSERT INTO Staff (StaffID, Salary, Gender, Fname, Lname, Birth_date, Address, IDdocument, Department_fk)
VALUES
  (1, 2000, 'Female', 'Loulwa', 'Salam', '1980-02-01', 'Beirut', 11222, 'Management'),
  (2, 1500, 'Female', 'Marwa', 'Saad', '1981-09-09', 'Beirut', 1133, 'Marketing'),
  (3, 1000, 'Male', 'Pio', 'Demaria', '1989-01-01', 'Beirut',  1144, 'Information Technology'),
  (4, 1000, 'Male', 'Andreo', 'Iglesias', '1981-09-08', 'Beirut', 1155, 'Information Technology'),
  (5, 1000, 'Female', 'Dana', 'Farah', '1992-03-03', 'Jbeil', 1166, NULL),
  (6, 1000, 'Male', 'Samir', 'Farah', '1992-04-09', 'Halat', 1177, NULL),
  (7, 900, 'Male', 'Ahmad', 'Farhat', '1993-05-09', 'Hazmieh', 1188, NULL),
  (8, 2000, 'Female', 'Dana', 'Sayid', '1995-05-03', 'Achrafieh', 1199, 'Information Technology'),
  (9, 1000, 'Male', 'Ahmad', 'Ali', '1995-06-03', 'Beirut', 1110, 'Housekeeping'),
  (10, 800, 'Female', 'Laurice', 'Makhoul', '1988-03-03', 'Dbayeh', 45664, NULL);

-- Insert data into the Dependent table
-- Insert data into the Dependent table
INSERT INTO Dependent (First_name, Last_name, StaffID_fk, Relationship, Birth_date, Phone_number, Gender)
VALUES
  ('Randa', 'Salam', 1, 'Daughter', '2002-08-01', '73743726', 'Female'),
  ('Karam', 'Salam', 1, 'Son', '2005-08-01', '73734234', 'Male'),
  ('Pamela', 'Maalouf', 3, 'Mother', '1966-10-05', '74327443', 'Female'),
  ('Mia', 'Demaria', 3, 'Daughter', '2011-09-04', '05234822', 'Female'),
  ('Mohammad', 'Farah', 5, 'Brother', '1990-07-02', '70372901', 'Male'),
  ('Sana', 'Farah', 5, 'Daughter', '2015-06-20', '05453243', 'Female'),
  ('Ismail', 'Farhat', 7, 'Father', '1970-01-10', '70873934', 'Male'),
  ('Karen', 'Sayid', 8, 'Sister', '2000-10-01', '70453555', 'Female'),
  ('Ahmad', 'Sayid', 8, 'Father', '1965-10-05', '74534455', 'Male'),
  ('Adam', 'Makhoul', 9, 'Son', '2010-05-05', '75645443', 'Male');

-- Insert data into the Award table
INSERT INTO Award (BadgeID, Validity_period, Bonus, Category, Description)
VALUES
  (1, 1 , 10, 'Department', 'Can be received for working for 3 additional hours in a working day'),
  (2, 7 , 10, 'Services', 'Weeklong hospitality award. Only one staff member can receive it in a week'),
  (3, 30 , 100, 'Department', 'The monthly hard work award. Received by the staff member who worked for the most additional hours'),
  (4, 30 , 50, 'Services', 'The monthly hard work award. Received by the staff member who received the most positive feedback from the customer during the month'),
  (5, 30 , 50, 'Services', 'The Sales award. It is given to the staff who was able to increase the hotel revenue, the most, by encouraging customer to buy stuffs or participate in the hotel’s services'),
  (6, 365 , 200, 'Department', 'The best Employee of the year. It is given to the most hard-working staff member, who showed up when some staff weren’t available due to circumstances, a trip of 7 days with a budget of 1000$ is awarded'),
  (7, 365 , 200, 'Services', 'The best Staff of the year. It is given to the most hard-working staff member, who received the most positive feedback from the customers during a year, and who did not skip more than 5 working days, a trip of 7 days with a budget of 1000$ is awarded'),
  (8, 365 , 500, 'All', 'Staff who contributed greatly to providing a safe environment for the hotel’s customers'),
  (9, 365 , 200, 'Department', 'The leadership award, it is given for the best manager of the year, the staff is awarded 5 days off'),
  (10, 365 , 500, 'All', 'Innovation award. It is given to the Staff member who came up with the most beneficial idea that reduced the hotel losses');
-- Insert data into the Shift table
INSERT INTO Shift (Shift_ID, Start_time, End_time, Day)
VALUES
  (1, '00:00:00', '07:00:00', 'Monday'),
  (2, '07:00:00', '10:00:00', 'Monday'),
  (3, '12:00:00', '15:00:00', 'Tuesday'),
  (4, '15:00:00', '22:00:00', 'Tuesday'),
  (5, '07:00:00', '15:00:00', 'Tuesday'),
  (6, '00:00:00', '07:00:00', 'Wednesday'),
  (7, '07:00:00', '10:00:00', 'Friday'),
  (8, '12:00:00', '15:00:00', 'Friday'),
  (9, '15:00:00', '22:00:00', 'Saturday'),
  (10, '07:00:00', '15:00:00', 'Sunday');
-- Insert data into the Receives table
INSERT INTO Receives (StaffID_fk, BadgeID_fk, Date)
VALUES
  (6, 2, '2022-09-11'),
  (7, 2, '2022-09-18'),
   (7, 7, '2023-01-02'),
  (10, 8, '2023-01-02'),
  (1, 1, '2022-04-04'),
  (2, 6, '2023-01-02'),
  (2, 9, '2023-01-02'),
  (3, 1, '2023-10-03'),
  (4, 1, '2023-11-03'),
  --(2, 9, '2023-05-02'),
  (7, 1, '2023-09-05'),
  (7,3 , '2023-10-02'),
  (7, 2, '2023-10-04'),
  (4, 5, '2023-11-03'),
  (7, 1, '2023-11-1');
  
  
  
 

-- Insert data into the Provides table
INSERT INTO Provides (StaffID_fk, ServiceID_fk, Shift_ID_fk)
VALUES
  (6, 5, 1),
  (6, 2, 5),
  (6, 2, 3),
  (7, 2, 1),
  (7, 3, 2),
  (7, 3, 4),
  (7, 2, 5),
  (7, 3, 3),
  (7, 3, 7),
  (10, 1, 1),
  (10, 1, 6),
  (6, 2, 8),
  (9, 2, 8),
  (10, 8, 8);
-- Insert data into the Event table
INSERT INTO Event (EventID, Name, Type, Description, Location, Capacity)
VALUES
  (1, 'Gala Dinner', 'Dining', 'Dinner to gather funds for charities', 'Restaurant', 100),
  (2, 'Yoga by the Pool', 'Fitness', 'A calming yoga session near the pool', 'Pool', 50),
  (3, 'Culinary Workshop', 'Dining', 'An informative workshop dealing with exotic dishes', 'Restaurant', 30),
  (4, 'Movie Night', 'Entertainment', 'Cinema experience for families', 'Garden', 100),
  (5, 'Wellness Workshop', 'Health', 'Workshop focusing on mental and emotional wellness', 'Spa', 30),
  (6, 'Pool Party', 'Entertainment', 'Pool party for guests and their families to have fun, with an open buffet', 'Pool', 50),
  (7, 'Brunch Gathering', 'Networking', 'Brunch event for guests to enjoy and interact with other guests', 'Restaurant', 60),
  (8, 'Fitness Workshop', 'Fitness', 'Workshop that informs guests how to begin working out and what equipment to use', 'Gym', 40);
-- Insert data into the Holds table
-- Insert data into the Holds table with logical start and end times
INSERT INTO Holds (ServiceID_fk, EventID_fk, Date, Start_time, End_time)
VALUES
  (1, 1, '2018-09-09', '10:00:00', '12:00:00'),
  (2, 2, '2019-10-10', '14:30:00', '17:00:00'),
  (3, 5, '2022-12-29', '09:00:00', '11:00:00'),
  (4, 8, '2023-01-09', '13:45:00', '15:30:00'),
  (2, 7, '2023-02-08', '11:00:00', '13:00:00'),
  (10, 4, '2023-03-11', '16:30:00', '18:00:00'),
  (1, 6, '2023-07-08', '10:00:00', '12:00:00'),
  (1, 1, '2023-09-01', '14:00:00', '16:00:00'),
  (1, 3, '2023-09-29', '15:30:00', '17:30:00'),
  (1, 7, '2023-10-01', '12:00:00', '14:00:00'),
  (1,1, '2023-11-08','5:00:00','12:00:00');


-- Insert data into the Contractor table
INSERT INTO Contractor (Name, Start_date, End_date, Type, Phone_number, Location, ServiceID_fk, Amount, Supervisor, Description)
VALUES
  ('Mom’s Food', '2023-1-10', '2023-7-10', 'Catering', '70384255', 'Hamra', 1, 5000, 'Marwa Saad', 'Provide daily hot dishes for the duration of 6 months'),
  ('CleanUp', '2023-2-10', '2023-7-10', 'Cleaning', '73288324', 'Ashrafieh', 5, 2000, 'Ahmad Abbas', 'Provide deep-cleaning services for the duration of 5 months'),
  ('RepairIt', '2023-5-1', '2024-5-1', 'Repair', '74583474', 'Jounieh', 11, 2000, 'Dana Farah', 'Provide repair services for the duration of 1 year'),
  ('SpaHouse', '2023-6-4', '2023-8-4', 'Spa', '70342844', 'Bliss', 3, 500, 'Ahmad Saleh', 'Provide Spa services for the duration of 2 months'),
  ('AkelTayeb', '2023-7-11', '2024-1-11', 'Catering', '73274774', 'Hamra', 1, 4000, 'Kareem Mohammad', 'Provide daily hot dishes for the duration of 6 months'),
  ('GymBro', '2023-7-11', '2024-1-11', 'Fitness', '70432444', 'Dbayeh', 4, 2000, 'Leah Raad', 'Provide training services for the duration of 6 months'),
  ('CleanQ', '2023-7-13', '2024-1-13', 'Cleaning', '70445324', 'Jounieh', 5, 2000, 'Clara Saad', 'Provide cleaning services for the duration of 6 months');
-- Insert data into the Supplier table
INSERT INTO Supplier (Name, Phone_number, Location, Type, Email)
VALUES
  ('CMA-CGM', '81000001', 'Beirut', 'Telephones', 'ss1@gmail.com'),
  ('LCMP', '81090900', 'Beirut', 'Uniforms', 'pkr@gmail.com'),
  ('Naharouna', '71902222', 'Jbeil', 'Stationary', 'll1@gmail.com'),
  ('AL-youm', '78199155', 'Jounieh', 'Pillows', 'tor@gmail.com'),
  ('LAL', '81772455', 'Hazmieh', 'Carpets', 'lal@gmail.com'),
  ('CMPS', '03545343', 'Dbayeh', 'Electric devices', 'cpp@gmail.com'),
  ('Jilouna', '03267234', 'Taanayel', 'Food', 'jio@gmail.com'),
  ('Fawaki', '01544677', 'Zahle', 'Cleaning and Hygiene', 'faa@gmail.com'),
  ('ALL Furniture', '01677677', 'Antelias', 'Furniture', 'aff@gmail.com'),
  ('Sky Mattress', '09787888', 'Beirut', 'Mattress', 'aki@gmail.com');
-- Insert data into the Inventory table
INSERT INTO Inventory (Inventory_ID, Dep_Name_fk, Type, Name, Price, Amount)
VALUES
  (1, 'Food and Beverage Management', 'Food', 'Flour bag', '5 ', 5),
  (2, 'Customer Relations', 'Stationary', 'Feedback form', '1 ', 100),
  (3, 'Housekeeping', 'Cleaning supplies', 'Disinfectant spray', '5 ', 50),
  (4, 'Housekeeping', 'Bedding', 'Bed sheet', '20 ', 75),
  (5, 'Food and Beverage Management', 'Beverages', 'Water', '0.5 ', 200),
  (6, 'Event Management', 'Decoration', 'Banner', '5 ', 20),
  (7, 'Housekeeping', 'Toiletries', 'Shampoo bottle', '4 ', 20),
  (8, 'Housekeeping', 'Bedding', 'Pillow Case', '6 ', 75),
  (9, 'Food and Beverage Management', 'Food', 'Salt bag', '3', 10),
  (10, 'Management', 'Electronics', 'Computer', '500 ', 3);
-- Insert data into the Supplies table
INSERT INTO Supplies (Date_supplied, InventoryID_fk, SupplierName_fk, Amount)
VALUES
  ('2023-5-10', 1, 'Jilouna', 3),
  ('2023-6-1', 2, 'Naharouna', 50),
  ('2023-6-11', 3, 'Fawaki', 20),
  ('2023-6-11', 4, 'ALL Furniture', 10),
  ('2023-6-29', 5, 'Jilouna', 50),
  ('2023-6-30', 6, 'Naharouna', 5),
  ('2023-7-1', 7, 'Fawaki', 20),
  ('2023-7-2', 8, 'AL-youm', 50),
  ('2023-7-5', 9, 'Jilouna', 5),
  ('2023-7-10', 10, 'CMPS', 5);
-- Insert data into the Location table
INSERT INTO Location (Location, InventoryID_fk)
VALUES
  ('Restaurant', 1),
  ('Rooms', 4),
  ('Storeroom', 4),
  ('Reception', 10),
  ('Offices', 10),
  ('Storeroom', 6),
  ('Reception', 6),
  ('Reception', 2),
  ('Storeroom', 3),
  ('Restaurant', 5),
  ('Rooms', 7),
  ('Storeroom', 7),
  ('Restaurant', 9),
  ('Rooms', 8);
